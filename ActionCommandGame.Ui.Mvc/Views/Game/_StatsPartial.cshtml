@using ActionCommandGame.Services.Extensions
@model Player

@{
    var percentage = Math.Round(((double)Model.Experience / Model.GetExperienceForNextLevel()) * 100);
}

@if (Model != null)
{
    <div class="text-center">
        <p>Money: <br/><strong>&euro; @Model.Money</strong></p>
        <p>Level: <br/><strong>@Model.GetLevel()</strong></p>

        <p>Experience until level-up: <br/><strong>(@Model.Experience/@Model.GetExperienceForNextLevel())</strong></p>
        <div class="progress mb-3" style="height: 25px;">
            <div class="progress-bar bg-success" role="progressbar" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100" style="width: @percentage%;">
                @percentage%
            </div>
        </div>

        <p>Total Experience: <br/><strong>@Model.Experience</strong></p>

        <p>
            Attack: <strong>@(Model.CurrentAttackPlayerItem?.RemainingAttack ?? 0)</strong><br/>
            Defense: <strong>@(Model.CurrentDefensePlayerItem?.RemainingDefense ?? 0)</strong><br/>
            Fuel: <strong>@(Model.CurrentFuelPlayerItem?.RemainingFuel ?? 0)</strong>
        </p>
    </div>
}